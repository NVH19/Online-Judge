<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trang Thống kê</title>
    <style>
        header {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            z-index: 1000;
            background: linear-gradient(to right, #b92929, #fa6d6d);
            color: #ffffff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 15px 35px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            transition: top 0.3s;
        }

        header:hover {
            background: linear-gradient(to right, #fa6d6d, #b92929);
        }

        header img {
            width: 40px;
            height: auto;
            background-color: #fff;
            border-radius: 5px;
        }

        header i {
            font-size: 20px;
        }

        body {
            font-family: 'Arial', sans-serif;
            background-color: #f2f2f2;
            margin-top: 120px;
        }

        @media screen and (max-width: 768px) {
            body {
                font-size: 14px;
                /* Giảm cỡ chữ khi kích thước màn hình nhỏ hơn hoặc bằng 768px */
            }
        }

        .content {
            right: 0px;
            margin-top: 0px;
            margin-left: 260px;
            padding: 20px;
            margin-right: 0px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            background-color: #f9f9f9;
            padding-top: 20px;
        }

        #summaryTable {
            margin-bottom: 20px;
            padding: 15px;
            border-radius: 5px;
            background-color: #fff;
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
        }

        #scoreDistributionChart {
            margin-bottom: 20px;
            padding: 15px;
            border-radius: 5px;
            background-color: #fff;
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
        }

        table {
            border-collapse: collapse;
            width: 100%;
        }

        table,
        th,
        td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: center;
        }

        @media print {
            header {
                display: none;
            }

            .nav-menu {
                display: none;
            }

            body {
                width: 100%;
            }

        }

        header {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 40px;
            z-index: 1000;
            background-color: #b92929;
            color: #ffffff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 15px 35px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            transition: top 0.3s;
        }

        header img {
            width: 40px;
            height: auto;
            background-color: #fff;
            border-radius: 5px;
        }

        header i {
            font-size: 20px;
        }

        .nav-menu {
            background-color: #ddd;
            width: 200px;
            padding: 20px;
            position: fixed;
            top: 70px;
            bottom: 0;
            left: 0;
            overflow-y: auto;
            box-shadow: 2px 0 4px rgba(0, 0, 0, 0.1);
        }

        .nav-menu ul {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }

        .nav-menu ul li {
            margin-bottom: 10px;
            box-shadow: 2px 0 4px rgba(0, 0, 0, 0.1);
        }

        .nav-menu ul li a {
            text-decoration: none;
            color: #ad171c;
            display: block;
            padding: 10px;
            border-radius: 4px;
            transition: background-color 0.3s;
        }

        .nav-menu ul li a:hover {
            background-color: #ccc;
        }
        
    </style>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="thongke.js" defer></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.3/jspdf.umd.min.js"></script>
</head>

<body>
    <header>
        <a href="adminPage"><img src="../image/logo_ptit.png" alt="Your Logo" /></a>
        <i class="fas fa-user"></i>
    </header>
    <nav class="nav-menu">
        <ul>
            <li><a href="exam">Quản lý kỳ thi</a></li>
            <li>
                <a href="qlsv">Quản lý sinh viên</a>
            </li>
            <li><a href="exampleThongKe">Thống kê</a></li>
        </ul>
    </nav>
    <div class="content" id="content">
        <!-- Bảng thống kê tổng hợp -->
        <div id="summaryTable">
            <h2 style="display: inline-block;">Bảng thống kê tổng hợp</h2>
            <!-- Bộ lọc -->
            <div id="filters" style="padding-bottom: 15px;">
                <label for="examSelect"></label>
                <select id="examSelect">
                    <option value="all">Tất cả</option>
                    <option value="practice">Luyện tập</option>
                    <option value="midterm1">Giữa kì </option>
                    <option value="finalterm1">Cuối kì </option>
                    <!-- <option value="completed">Đã hoàn thành</option>
                            <option value="incomplete">Chưa hoàn thành</option> -->
                    <!-- Thêm các tùy chọn cho từng kỳ thi từ dữ liệu frontend -->
                </select>
                <!-- Thêm các bộ lọc khác nếu cần -->
                <button id="btn-apply" onclick="applyFilters()">Áp dụng</button>
            </div>
            <table id="examSummary">
                <thead>
                    <tr>
                        <th>Tên kỳ thi</th>
                        <th>Tổng số lần tham gia</th>
                        <th>Tỷ lệ hoàn thành (%)</th>
                        <th>Điểm trung bình</th>
                    </tr>
                </thead>
                <tbody id="summaryData">
                    <!-- Dữ liệu sẽ được thêm vào đây bằng JavaScript -->
                </tbody>
            </table>
        </div>

        <!-- Biểu đồ phân phối điểm số -->
        <div id="scoreDistributionChart">
            <h2>Biểu đồ phân phối điểm số</h2>
            <canvas id="scoreDistributionCanvas"></canvas>
        </div>
        <button onclick="exportToPDF()">Xuất PDF</button>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Dữ liệu mẫu về kết quả của các kỳ thi
            var examResults = [
                { examId: 'EX001', examName: 'Kỳ thi giữa kỳ I', studentId: 'SV001', studentName: 'Nguyễn Văn Chiến', score: 8.5, status: 'Hoàn thành' },
                { examId: 'EX001', examName: 'Kỳ thi giữa kỳ I', studentId: 'SV002', studentName: 'Trần Thị Hoa', score: 7, status: 'Hoàn thành' },
                { examId: 'EX002', examName: 'Luyện tập', studentId: 'SV003', studentName: 'Phạm Văn Hoàng', score: 6, status: 'Chưa hoàn thành' },
                { examId: 'EX001', examName: 'Kỳ thi giữa kỳ I', studentId: 'SV003', studentName: 'Nguyễn Văn A', score: 8.5, status: 'Hoàn thành' },
                { examId: 'EX002', examName: 'Luyện tập', studentId: 'SV002', studentName: 'Trần Thị Hoa', score: 7, status: 'Hoàn thành' },
                { examId: 'EX002', examName: 'Luyện tập', studentId: 'SV003', studentName: 'Phạm Văn Hoàng', score: 5, status: 'Chưa hoàn thành' },
                { examId: 'EX001', examName: 'Kỳ thi giữa kỳ I', studentId: 'SV004', studentName: 'Nguyễn Văn A', score: 8.5, status: 'Hoàn thành' },
                { examId: 'EX002', examName: 'Luyện tập', studentId: 'SV002', studentName: 'Trần Thị Hoa', score: 7, status: 'Hoàn thành' },
                { examId: 'EX002', examName: 'Luyện tập', studentId: 'SV003', studentName: 'Phạm Văn Hoàng', score: 6, status: 'Hoàn thành' },
                // Thêm dữ liệu các kỳ thi khác ở đây
            ];

            // Hàm hiển thị bảng thống kê tổng hợp
            function displaySummary() {
                var summaryData = document.getElementById('summaryData');
                summaryData.innerHTML = '';

                // Tạo một đối tượng để lưu trữ thông tin thống kê cho mỗi kỳ thi
                var examSummary = {};

                examResults.forEach(function (result) {
                    // Tạo hoặc cập nhật thông tin thống kê cho từng kỳ thi
                    if (!examSummary[result.examId]) {
                        examSummary[result.examId] = {
                            name: result.examName,
                            totalParticipants: 0,
                            completedCount: 0,
                            totalScore: 0,
                        };
                    }

                    examSummary[result.examId].totalParticipants++;
                    if (result.status === 'Hoàn thành') {
                        examSummary[result.examId].completedCount++;
                    }
                    examSummary[result.examId].totalScore += result.score || 0;
                });

                // Hiển thị thông tin thống kê trên bảng
                Object.keys(examSummary).forEach(function (examId) {
                    var exam = examSummary[examId];
                    var completionRate = (exam.completedCount / exam.totalParticipants) * 100;
                    var averageScore = exam.totalScore / exam.totalParticipants;

                    var row = summaryData.insertRow();
                    row.insertCell(0).textContent = exam.name;
                    row.insertCell(1).textContent = exam.totalParticipants;
                    row.insertCell(2).textContent = completionRate.toFixed(2) + '%';
                    row.insertCell(3).textContent = averageScore.toFixed(2);
                });
            }

            // Hàm tạo biểu đồ phân phối điểm số
            function createScoreDistributionChart() {
                // Lập danh sách điểm số từ kết quả của tất cả các kỳ thi
                var scores = examResults.map(function (result) {
                    return result.score || 0;
                });

                var ctx = document.getElementById('scoreDistributionCanvas').getContext('2d');
                var scoreDistributionChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: scores.map(function (_, index) {
                            return 'student' + (index + 1);
                        }),
                        datasets: [{
                            label: 'Scores',
                            data: scores,
                            backgroundColor: 'rgba(54, 162, 235, 0.5)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }
                    }
                });
            }

            // Hàm áp dụng bộ lọc
            function applyFilters() {
                // Code xử lý áp dụng bộ lọc sẽ được thêm sau
            }

            // Gọi các hàm để hiển thị dữ liệu và biểu đồ khi trang được tải
            displaySummary();
            createScoreDistributionChart();
            var completedCount = createCompletionRatePieCharts(courses);
            var completedPercentage = courses.data.length;
            console.log(completedPercentage)

            // Assuming completedPercentage is calculated correctly elsewhere

            // Create main divs
            var desc1 = document.createElement('div');
            desc1.style.display = "flex";

            var desc2 = document.createElement('div');
            desc2.style.display = "flex";
            desc2.style.marginTop = "20px";

            // Create sub-divs for completion and non-completion
            var subDiv1 = document.createElement("div");
            subDiv1.style.backgroundColor = "#e74c3c";
            subDiv1.style.width = "40px";

            var subDiv2 = document.createElement("div");
            subDiv2.style.backgroundColor = "#2ecc71";
            subDiv2.style.width = "40px";

            // Create paragraphs for completion and non-completion percentages
            var paragraph1 = document.createElement("p");
            paragraph1.style.display = "flex";
            paragraph1.textContent = (100 - (completedPercentage / completedCount).toFixed(2).toString()) + "% Hoàn thành";

            var paragraph2 = document.createElement("p");
            paragraph2.textContent = (completedPercentage / completedCount).toFixed(2).toString() + "% Chưa hoàn thành";

            // Append elements
            desc1.appendChild(subDiv1);
            desc1.appendChild(paragraph1);

            desc2.appendChild(subDiv2);
            desc2.appendChild(paragraph2);

            // Append main divs to container
            var container = document.getElementById('descrition');
            container.appendChild(desc1);
            container.appendChild(desc2);
            function createCompletionRatePieCharts(courses) {
                // Tạo một đối tượng để lưu trữ thông tin thống kê cho từng kỳ thi

                // Tạo danh sách các sinh viên và tỉ lệ hoàn thành của họ
                var completedCount = 0;
                var incompletedCount = 0;

                courses.data.forEach(function (result) {
                    if (result.status === 'Hoàn thành') {
                        completedCount++;
                    } else {
                        incompletedCount++;
                    }
                });

                // Tính tỉ lệ phần trăm
                var total = completedCount + incompletedCount;
                var completedPercentage = (completedCount / total) * 100;
                var incompletedPercentage = (incompletedCount / total) * 100;

                // Vẽ biểu đồ tròn
                var canvas = document.getElementById('myPieChart');
                var ctx2 = canvas.getContext('2d');
                var centerX = canvas.width / 2;
                var centerY = canvas.height / 2;
                var radius = Math.min(canvas.width, canvas.height) / 2;

                ctx2.clearRect(0, 0, canvas.width, canvas.height);

                // Vẽ phần đã hoàn thành
                ctx2.beginPath();
                ctx2.moveTo(centerX, centerY);
                ctx2.arc(centerX, centerY, radius, 0, Math.PI * 2 * (completedPercentage / 100), false);
                ctx2.fillStyle = '#2ecc71'; // Màu xanh lá cây
                ctx2.fill();

                // Vẽ phần chưa hoàn thành
                ctx2.beginPath();
                ctx2.moveTo(centerX, centerY);
                ctx2.arc(centerX, centerY, radius, Math.PI * 2 * (completedPercentage / 100), 0, false);
                ctx2.fillStyle = '#e74c3c'; // Màu đỏ
                ctx2.fill();
                return completedCount;
                // return completedPercentage
            }
            var completedCount = createCompletionRatePieCharts(courses);
            var completedPercentage = courses.data.length;
            console.log(completedPercentage)

            // Assuming completedPercentage is calculated correctly elsewhere

            // Create main divs
            var desc1 = document.createElement('div');
            desc1.style.display = "flex";

            var desc2 = document.createElement('div');
            desc2.style.display = "flex";
            desc2.style.marginTop = "20px";

            // Create sub-divs for completion and non-completion
            var subDiv1 = document.createElement("div");
            subDiv1.style.backgroundColor = "#e74c3c";
            subDiv1.style.width = "40px";

            var subDiv2 = document.createElement("div");
            subDiv2.style.backgroundColor = "#2ecc71";
            subDiv2.style.width = "40px";

            // Create paragraphs for completion and non-completion percentages
            var paragraph1 = document.createElement("p");
            paragraph1.style.display = "flex";
            paragraph1.textContent = (100 - (completedPercentage / completedCount).toFixed(2).toString()) + "% Hoàn thành";

            var paragraph2 = document.createElement("p");
            paragraph2.textContent = (completedPercentage / completedCount).toFixed(2).toString() + "% Chưa hoàn thành";

            // Append elements
            desc1.appendChild(subDiv1);
            desc1.appendChild(paragraph1);

            desc2.appendChild(subDiv2);
            desc2.appendChild(paragraph2);

            // Append main divs to container
            var container = document.getElementById('descrition');
            container.appendChild(desc1);
            container.appendChild(desc2);
        });
        

        function exportToPDF() {
            window.print();
        }
        function applyFilters() {
                var selectedOption = document.getElementById("examSelect").value;
                console.log(selectedOption,);

                // Thực hiện các hành động tương ứng với giá trị tùy chọn được chọn
                switch (selectedOption) {
                    case "all":
                        // Thực hiện hành động khi chọn "Tất cả"
                        console.log("Chọn Tất cả");
                        displaySummaryH()
                        break;
                    case "practice":
                        // Thực hiện hành động khi chọn "Luyện tập"
                        console.log("Chọn Luyện tập");
                        displaySummaryChoice("EX002");
                        // createScoreDistributionChart("EX002");
                        break;
                    case "midterm1":
                        // Thực hiện hành động khi chọn "Giữa kì một"
                        displaySummaryChoice("EX001");
                        // createScoreDistributionChart("EX001");
                        console.log("Chọn Giữa kỳ một");
                        break;
                    case "finalterm1":
                        // Thực hiện hành động khi chọn "Đã hoàn thành"
                        displaySummaryChoice("EX003 ");
                        console.log("Chọn Đã hoàn thành");
                        break;
                    default:
                        console.log("Không có hành động được xác định cho tùy chọn này");
                }
            }
    </script>
</body>

</html>